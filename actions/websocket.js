Object.defineProperty(exports,"__esModule",{value:true});exports.







































init=init;exports.









































close=close;exports.














































































































































































































































































































































































































userTyping=userTyping;var _reduxBatchedActions=require('redux-batched-actions');var _client=require('../client');var _client2=_interopRequireDefault(_client);var _websocket_client=require('../client/websocket_client');var _websocket_client2=_interopRequireDefault(_websocket_client);var _users=require('./users');var _channels=require('./channels');var _posts2=require('./posts');var _preferences=require('./preferences');var _constants=require('../constants');var _channels2=require('../selectors/entities/channels');var _channel_utils=require('../utils/channel_utils');var _post_utils=require('../utils/post_utils');var _event_emitter=require('../utils/event_emitter');var _event_emitter2=_interopRequireDefault(_event_emitter);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function init(platform,siteUrl,token,optionalWebSocket){var _this=this;return function _callee(dispatch,getState){var config,connUrl,authToken,websocketOpts;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config=getState().entities.general.config;connUrl=siteUrl||_client2.default.getUrl();authToken=token||_client2.default.getToken();if(connUrl.startsWith('https:')){connUrl=connUrl.replace(/^https:/,'wss:');}else{connUrl=connUrl.replace(/^http:/,'ws:');}if(!/:\d+$/.test(connUrl)){if(connUrl.startsWith('wss:')){connUrl+=':'+(config.WebsocketSecurePort||443);}else{connUrl+=':'+(config.WebsocketPort||80);}}connUrl+=_client2.default.getUrlVersion()+'/users/websocket';_websocket_client2.default.setFirstConnectCallback(handleFirstConnect);_websocket_client2.default.setEventCallback(handleEvent);_websocket_client2.default.setReconnectCallback(handleReconnect);_websocket_client2.default.setCloseCallback(handleClose);_websocket_client2.default.setConnectingCallback(handleConnecting);websocketOpts={connectionUrl:connUrl,platform:platform};if(optionalWebSocket){websocketOpts.webSocketConnector=optionalWebSocket;}return _context.abrupt('return',_websocket_client2.default.initialize(authToken,dispatch,getState,websocketOpts));case 14:case'end':return _context.stop();}}},null,_this);};}function close(){var _this2=this;return function _callee2(dispatch,getState){return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_websocket_client2.default.close(true);if(dispatch){dispatch({type:_constants.GeneralTypes.WEBSOCKET_FAILURE,error:'Closed'},getState);}case 2:case'end':return _context2.stop();}}},null,_this2);};}function handleConnecting(dispatch,getState){dispatch({type:_constants.GeneralTypes.WEBSOCKET_REQUEST},getState);}function handleFirstConnect(dispatch,getState){dispatch({type:_constants.GeneralTypes.WEBSOCKET_SUCCESS},getState);}function handleReconnect(dispatch,getState){var entities,currentTeamId,currentChannelId;return regeneratorRuntime.async(function handleReconnect$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:entities=getState().entities;currentTeamId=entities.teams.currentTeamId;currentChannelId=entities.channels.currentChannelId;if(!currentTeamId){_context3.next=8;break;}_context3.next=6;return regeneratorRuntime.awrap((0,_channels.fetchMyChannelsAndMembers)(currentTeamId)(dispatch,getState));case 6:(0,_users.loadProfilesForDirect)()(dispatch,getState);if(currentChannelId){loadPostsHelper(currentTeamId,currentChannelId,dispatch,getState);}case 8:dispatch({type:_constants.GeneralTypes.WEBSOCKET_SUCCESS},getState);case 9:case'end':return _context3.stop();}}},null,this);}function handleClose(connectFailCount,dispatch,getState){dispatch({type:_constants.GeneralTypes.WEBSOCKET_FAILURE,error:connectFailCount},getState);}function handleEvent(msg,dispatch,getState){switch(msg.event){case _constants.WebsocketEvents.POSTED:case _constants.WebsocketEvents.EPHEMERAL_MESSAGE:handleNewPostEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.POST_EDITED:handlePostEdited(msg,dispatch,getState);break;case _constants.WebsocketEvents.POST_DELETED:handlePostDeleted(msg,dispatch,getState);break;case _constants.WebsocketEvents.LEAVE_TEAM:handleLeaveTeamEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.USER_ADDED:handleUserAddedEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.USER_REMOVED:handleUserRemovedEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.USER_UPDATED:handleUserUpdatedEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.CHANNEL_CREATED:handleChannelCreatedEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.CHANNEL_DELETED:handleChannelDeletedEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.DIRECT_ADDED:handleDirectAddedEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.PREFERENCE_CHANGED:handlePreferenceChangedEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.STATUS_CHANGED:handleStatusChangedEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.TYPING:handleUserTypingEvent(msg,dispatch,getState);break;case _constants.WebsocketEvents.HELLO:handleHelloEvent(msg);break;}}function handleNewPostEvent(msg,dispatch,getState){var state,currentChannelId,currentTeamId,users,posts,post,userId,teamId,status,otherUserId,markAsRead;return regeneratorRuntime.async(function handleNewPostEvent$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:state=getState();currentChannelId=state.entities.channels.currentChannelId;currentTeamId=state.entities.teams.currentTeamId;users=state.entities.users;posts=state.entities.posts.posts;post=JSON.parse(msg.data.post);userId=post.user_id;teamId=msg.data.team_id||currentTeamId;status=users.statuses[userId];if(!users.profiles[userId]&&userId!==users.currentUserId){(0,_users.getProfilesByIds)([userId])(dispatch,getState);}if(status!==_constants.Constants.ONLINE){(0,_users.getStatusesByIds)([userId])(dispatch,getState);}_context4.t0=post.type;_context4.next=_context4.t0===_constants.Constants.POST_HEADER_CHANGE?14:_context4.t0===_constants.Constants.POST_PURPOSE_CHANGE?16:18;break;case 14:(0,_channels.updateChannelHeader)(post.channel_id,post.props.new_header)(dispatch,getState);return _context4.abrupt('break',18);case 16:(0,_channels.updateChannelPurpose)(post.channel_id,post.props.new_purpose)(dispatch,getState);return _context4.abrupt('break',18);case 18:if(msg.data.channel_type===_constants.Constants.DM_CHANNEL){otherUserId=(0,_channel_utils.getUserIdFromChannelName)(users.currentUserId,msg.data.channel_name);(0,_preferences.makeDirectChannelVisibleIfNecessary)(otherUserId)(dispatch,getState);}else if(msg.data.channel_type===_constants.Constants.GM_CHANNEL){(0,_preferences.makeGroupMessageVisibleIfNecessary)(post.channel_id)(dispatch,getState);}if(!(post.root_id&&!posts[post.root_id])){_context4.next=22;break;}_context4.next=22;return regeneratorRuntime.awrap(_client2.default.getPost(teamId,post.channel_id,post.root_id).then(function(data){var rootUserId=data.posts[post.root_id].user_id;var rootStatus=users.statuses[rootUserId];if(!users.profiles[rootUserId]&&rootUserId!==users.currentUserId){(0,_users.getProfilesByIds)([rootUserId])(dispatch,getState);}if(rootStatus!==_constants.Constants.ONLINE){(0,_users.getStatusesByIds)([rootUserId])(dispatch,getState);}dispatch({type:_constants.PostsTypes.RECEIVED_POSTS,data:data,channelId:post.channel_id},getState);}));case 22:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.PostsTypes.RECEIVED_POSTS,data:{order:[],posts:_defineProperty({},post.id,post)},channelId:post.channel_id},{type:_constants.WebsocketEvents.STOP_TYPING,data:{id:post.channel_id+post.root_id,userId:post.user_id}}]),getState);if(!(0,_post_utils.shouldIgnorePost)(post)){_context4.next=25;break;}return _context4.abrupt('return');case 25:markAsRead=false;if(userId===users.currentUserId&&!(0,_post_utils.isSystemMessage)(post)){markAsRead=true;}else if(post.channel_id===currentChannelId){markAsRead=true;}if(markAsRead){(0,_channels.markChannelAsRead)(post.channel_id)(dispatch,getState);}else{(0,_channels.markChannelAsUnread)(post.channel_id,msg.data.mentions)(dispatch,getState);}case 28:case'end':return _context4.stop();}}},null,this);}function handlePostEdited(msg,dispatch,getState){var data=JSON.parse(msg.data.post);dispatch({type:_constants.PostsTypes.RECEIVED_POST,data:data},getState);}function handlePostDeleted(msg,dispatch,getState){var data=JSON.parse(msg.data.post);dispatch({type:_constants.PostsTypes.POST_DELETED,data:data},getState);}function handleLeaveTeamEvent(msg,dispatch,getState){var entities=getState().entities;var _entities$teams=entities.teams,currentTeamId=_entities$teams.currentTeamId,teams=_entities$teams.teams;var currentUserId=entities.users.currentUserId;if(currentUserId===msg.data.user_id){dispatch({type:_constants.TeamsTypes.LEAVE_TEAM,data:teams[msg.data.team_id]},getState);if(currentTeamId===msg.data.team_id){_event_emitter2.default.emit('leave_team');}}}function handleUserAddedEvent(msg,dispatch,getState){var state=getState();var currentChannelId=state.entities.channels.currentChannelId;var currentTeamId=state.entities.teams.currentTeamId;var currentUserId=state.entities.users.currentUserId;var teamId=msg.data.team_id;if(msg.broadcast.channel_id===currentChannelId){(0,_channels.getChannelStats)(teamId,currentChannelId)(dispatch,getState);}if(teamId===currentTeamId&&msg.data.user_id===currentUserId){(0,_channels.getChannel)(teamId,msg.broadcast.channel_id)(dispatch,getState);}}function handleUserRemovedEvent(msg,dispatch,getState){var state=getState();var currentChannelId=state.entities.channels.currentChannelId;var currentTeamId=state.entities.teams.currentTeamId;var currentUserId=state.entities.users.currentUserId;if(msg.broadcast.user_id===currentUserId&&currentTeamId){(0,_channels.fetchMyChannelsAndMembers)(currentTeamId)(dispatch,getState);dispatch({type:_constants.ChannelTypes.LEAVE_CHANNEL,data:msg.data.channel_id},getState);}else if(msg.broadcast.channel_id===currentChannelId){(0,_channels.getChannelStats)(currentTeamId,currentChannelId)(dispatch,getState);}}function handleUserUpdatedEvent(msg,dispatch,getState){var entities=getState().entities;var currentUserId=entities.users.currentUserId;var user=msg.data.user;if(user.id!==currentUserId){dispatch({type:_constants.UsersTypes.RECEIVED_PROFILES,data:_defineProperty({},user.id,user)},getState);}}function handleChannelCreatedEvent(msg,dispatch,getState){var _msg$data=msg.data,channelId=_msg$data.channel_id,teamId=_msg$data.team_id;var state=getState();var channels=state.entities.channels.channels;var currentTeamId=state.entities.teams.currentTeamId;if(teamId===currentTeamId&&!channels[channelId]){(0,_channels.getChannel)(teamId,channelId)(dispatch,getState);}}function handleChannelDeletedEvent(msg,dispatch,getState){var entities=getState().entities;var _entities$channels=entities.channels,channels=_entities$channels.channels,currentChannelId=_entities$channels.currentChannelId;var currentTeamId=entities.teams.currentTeamId;if(msg.broadcast.team_id===currentTeamId){if(msg.data.channel_id===currentChannelId){var channelId='';var channel=Object.keys(channels).filter(function(key){return channels[key].name===_constants.Constants.DEFAULT_CHANNEL;});if(channel.length){channelId=channel[0];}dispatch({type:_constants.ChannelTypes.SELECT_CHANNEL,data:channelId},getState);}dispatch({type:_constants.ChannelTypes.RECEIVED_CHANNEL_DELETED,data:msg.data.channel_id},getState);(0,_channels.fetchMyChannelsAndMembers)(currentTeamId)(dispatch,getState);}}function handleDirectAddedEvent(msg,dispatch,getState){var state=getState();var currentTeamId=state.entities.teams.currentTeamId;(0,_channels.getChannel)(currentTeamId,msg.broadcast.channel_id)(dispatch,getState);}function handlePreferenceChangedEvent(msg,dispatch,getState){var preference=JSON.parse(msg.data.preference);dispatch({type:_constants.PreferencesTypes.RECEIVED_PREFERENCES,data:[preference]},getState);if(preference.category===_constants.Constants.CATEGORY_DIRECT_CHANNEL_SHOW){var state=getState();var users=state.entities.users;var userId=preference.name;var status=users.statuses[userId];if(!users.profiles[userId]&&userId!==users.currentUserId){(0,_users.getProfilesByIds)([userId])(dispatch,getState);}if(status!==_constants.Constants.ONLINE){(0,_users.getStatusesByIds)([userId])(dispatch,getState);}}}function handleStatusChangedEvent(msg,dispatch,getState){dispatch({type:_constants.UsersTypes.RECEIVED_STATUSES,data:_defineProperty({},msg.data.user_id,msg.data.status)},getState);}function handleHelloEvent(msg){var serverVersion=msg.data.server_version;if(serverVersion&&_client2.default.serverVersion!==serverVersion){_client2.default.serverVersion=serverVersion;_event_emitter2.default.emit(_constants.Constants.CONFIG_CHANGED,serverVersion);}}var typingUsers={};function handleUserTypingEvent(msg,dispatch,getState){var state=getState();var _state$entities$users=state.entities.users,currentUserId=_state$entities$users.currentUserId,profiles=_state$entities$users.profiles,statuses=_state$entities$users.statuses;var config=state.entities.general.config;var userId=msg.data.user_id;var id=msg.broadcast.channel_id+msg.data.parent_id;var data={id:id,userId:userId};if(!typingUsers[id]){typingUsers[id]={};}if(typingUsers[id][userId]){clearTimeout(typingUsers[id][userId].timeout);}typingUsers[id][userId]=setTimeout(function(){Reflect.deleteProperty(typingUsers[id],userId);if(typingUsers[id]==={}){Reflect.deleteProperty(typingUsers,id);}dispatch({type:_constants.WebsocketEvents.STOP_TYPING,data:data},getState);},parseInt(config.TimeBetweenUserTypingUpdatesMilliseconds,10));dispatch({type:_constants.WebsocketEvents.TYPING,data:data},getState);if(!profiles[userId]&&userId!==currentUserId){(0,_users.getProfilesByIds)([userId])(dispatch,getState);}var status=statuses[userId];if(status!==_constants.Constants.ONLINE){(0,_users.getStatusesByIds)([userId])(dispatch,getState);}}function loadPostsHelper(teamId,channelId,dispatch,getState){var _getState$entities$po=getState().entities.posts,posts=_getState$entities$po.posts,postsByChannel=_getState$entities$po.postsByChannel;var postsArray=postsByChannel[channelId];var latestPostId=postsArray[postsArray.length-1];var latestPostTime=0;if(latestPostId){latestPostTime=posts[latestPostId].create_at||0;}if(Object.keys(posts).length===0||postsArray.length<_constants.Constants.POST_CHUNK_SIZE||latestPostTime===0){(0,_posts2.getPosts)(teamId,channelId)(dispatch,getState);}else{(0,_posts2.getPostsSince)(teamId,channelId,latestPostTime)(dispatch,getState);}}var lastTimeTypingSent=0;function userTyping(channelId,parentPostId){var _this3=this;
return function _callee3(dispatch,getState){var state,config,t,membersInChannel;return regeneratorRuntime.async(function _callee3$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:
state=getState();
config=state.entities.general.config;
t=Date.now();
membersInChannel=(0,_channels2.getCurrentChannelStats)(state).member_count;

if(t-lastTimeTypingSent>config.TimeBetweenUserTypingUpdatesMilliseconds&&
membersInChannel<config.MaxNotificationsPerChannel&&config.EnableUserTypingMessages==='true'){
_websocket_client2.default.userTyping(channelId,parentPostId);
lastTimeTypingSent=t;
}case 5:case'end':return _context5.stop();}}},null,_this3);};

}