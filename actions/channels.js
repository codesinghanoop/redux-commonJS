Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};exports.
















selectChannel=selectChannel;exports.












createChannel=createChannel;exports.

































































createDirectChannel=createDirectChannel;exports.

















































updateChannel=updateChannel;exports.




























updateChannelNotifyProps=updateChannelNotifyProps;exports.





































getChannel=getChannel;exports.































fetchMyChannelsAndMembers=fetchMyChannelsAndMembers;exports.















































getMyChannelMembers=getMyChannelMembers;exports.





























leaveChannel=leaveChannel;exports.


























joinChannel=joinChannel;exports.














































deleteChannel=deleteChannel;exports.






































viewChannel=viewChannel;exports.



























getMoreChannels=getMoreChannels;exports.





























searchMoreChannels=searchMoreChannels;exports.



























getChannelStats=getChannelStats;exports.



























addChannelMember=addChannelMember;exports.



























removeChannelMember=removeChannelMember;exports.



























updateChannelHeader=updateChannelHeader;exports.











updateChannelPurpose=updateChannelPurpose;exports.











markChannelAsRead=markChannelAsRead;exports.




































markChannelAsUnread=markChannelAsUnread;exports.


































autocompleteChannels=autocompleteChannels;var _constants=require('../constants');var _reduxBatchedActions=require('redux-batched-actions');var _client=require('../client');var _client2=_interopRequireDefault(_client);var _errors=require('./errors');var _helpers=require('./helpers');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function selectChannel(channelId){var _this=this;return function _callee(dispatch,getState){return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{dispatch({type:_constants.ChannelTypes.SELECT_CHANNEL,data:channelId},getState);}catch(error){(0,_errors.logError)(error)(dispatch);}case 1:case'end':return _context.stop();}}},null,_this);};}function createChannel(channel,userId){var _this2=this;return function _callee2(dispatch,getState){var created,member,actions,_getState$entities$ch,channels,myMembers;return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.CREATE_CHANNEL_REQUEST},{type:_constants.ChannelTypes.CHANNEL_MEMBERS_REQUEST}]),getState);created=void 0;_context2.prev=2;_context2.next=5;return regeneratorRuntime.awrap(_client2.default.createChannel(channel));case 5:created=_context2.sent;_context2.next=13;break;case 8:_context2.prev=8;_context2.t0=_context2['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context2.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.CREATE_CHANNEL_FAILURE,error:_context2.t0},{type:_constants.ChannelTypes.CHANNEL_MEMBERS_FAILURE,error:_context2.t0},(0,_errors.getLogErrorAction)(_context2.t0)]),getState);return _context2.abrupt('return',null);case 13:member={channel_id:created.id,user_id:userId,roles:_constants.Constants.CHANNEL_USER_ROLE+' '+_constants.Constants.CHANNEL_ADMIN_ROLE,last_viewed_at:0,msg_count:0,mention_count:0,notify_props:{desktop:'default',mark_unread:'all'},last_update_at:created.create_at};actions=[];_getState$entities$ch=getState().entities.channels,channels=_getState$entities$ch.channels,myMembers=_getState$entities$ch.myMembers;if(!channels[created.id]){actions.push({type:_constants.ChannelTypes.RECEIVED_CHANNEL,data:created});}if(!myMembers[created.id]){actions.push({type:_constants.ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER,data:member});}dispatch((0,_reduxBatchedActions.batchActions)([].concat(actions,[{type:_constants.ChannelTypes.CREATE_CHANNEL_SUCCESS},{type:_constants.ChannelTypes.CHANNEL_MEMBERS_SUCCESS}])),getState);return _context2.abrupt('return',created);case 20:case'end':return _context2.stop();}}},null,_this2,[[2,8]]);};}function createDirectChannel(teamId,userId,otherUserId){var _this3=this;return function _callee3(dispatch,getState){var created,member;return regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch({type:_constants.ChannelTypes.CREATE_CHANNEL_REQUEST},getState);created=void 0;_context3.prev=2;_context3.next=5;return regeneratorRuntime.awrap(_client2.default.createDirectChannel(teamId,otherUserId));case 5:created=_context3.sent;_context3.next=13;break;case 8:_context3.prev=8;_context3.t0=_context3['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context3.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.CREATE_CHANNEL_FAILURE,error:_context3.t0},{type:_constants.ChannelTypes.CHANNEL_MEMBERS_FAILURE,error:_context3.t0},(0,_errors.getLogErrorAction)(_context3.t0)]),getState);return _context3.abrupt('return',null);case 13:member={channel_id:created.id,user_id:userId,roles:_constants.Constants.CHANNEL_USER_ROLE+' '+_constants.Constants.CHANNEL_ADMIN_ROLE,last_viewed_at:0,msg_count:0,mention_count:0,notify_props:{desktop:'default',mark_unread:'all'},last_update_at:created.create_at};dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_CHANNEL,data:created},{type:_constants.ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER,data:member},{type:_constants.PreferencesTypes.RECEIVED_PREFERENCES,data:[{category:_constants.Preferences.CATEGORY_DIRECT_CHANNEL_SHOW,name:otherUserId,value:'true'}]},{type:_constants.ChannelTypes.CREATE_CHANNEL_SUCCESS}]),getState);return _context3.abrupt('return',created);case 16:case'end':return _context3.stop();}}},null,_this3,[[2,8]]);};}function updateChannel(channel){var _this4=this;return function _callee4(dispatch,getState){var updated;return regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch({type:_constants.ChannelTypes.UPDATE_CHANNEL_REQUEST},getState);updated=void 0;_context4.prev=2;_context4.next=5;return regeneratorRuntime.awrap(_client2.default.updateChannel(channel));case 5:updated=_context4.sent;_context4.next=13;break;case 8:_context4.prev=8;_context4.t0=_context4['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context4.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.UPDATE_CHANNEL_FAILURE,error:_context4.t0},(0,_errors.getLogErrorAction)(_context4.t0)]),getState);return _context4.abrupt('return');case 13:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_CHANNEL,data:updated},{type:_constants.ChannelTypes.UPDATE_CHANNEL_SUCCESS}]),getState);case 14:case'end':return _context4.stop();}}},null,_this4,[[2,8]]);};}function updateChannelNotifyProps(userId,teamId,channelId,props){var _this5=this;return function _callee5(dispatch,getState){var data,notifyProps;return regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch({type:_constants.ChannelTypes.NOTIFY_PROPS_REQUEST},getState);data=_extends({user_id:userId,channel_id:channelId},props);notifyProps=void 0;_context5.prev=3;_context5.next=6;return regeneratorRuntime.awrap(_client2.default.updateChannelNotifyProps(teamId,data));case 6:notifyProps=_context5.sent;_context5.next=14;break;case 9:_context5.prev=9;_context5.t0=_context5['catch'](3);(0,_helpers.forceLogoutIfNecessary)(_context5.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.NOTIFY_PROPS_FAILURE,error:_context5.t0},(0,_errors.getLogErrorAction)(_context5.t0)]),getState);return _context5.abrupt('return');case 14:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_CHANNEL_PROPS,data:{channel_id:channelId,notifyProps:notifyProps}},{type:_constants.ChannelTypes.NOTIFY_PROPS_SUCCESS}]),getState);case 15:case'end':return _context5.stop();}}},null,_this5,[[3,9]]);};}function getChannel(teamId,channelId){var _this6=this;return function _callee6(dispatch,getState){var data;return regeneratorRuntime.async(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:dispatch({type:_constants.ChannelTypes.CHANNEL_REQUEST},getState);data=void 0;_context6.prev=2;_context6.next=5;return regeneratorRuntime.awrap(_client2.default.getChannel(teamId,channelId));case 5:data=_context6.sent;_context6.next=13;break;case 8:_context6.prev=8;_context6.t0=_context6['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context6.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.CHANNELS_FAILURE,error:_context6.t0},(0,_errors.getLogErrorAction)(_context6.t0)]),getState);return _context6.abrupt('return');case 13:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_CHANNEL,data:data.channel},{type:_constants.ChannelTypes.CHANNEL_SUCCESS},{type:_constants.ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER,data:data.member}]),getState);case 14:case'end':return _context6.stop();}}},null,_this6,[[2,8]]);};}function fetchMyChannelsAndMembers(teamId){var _this7=this;return function _callee7(dispatch,getState){var channels,channelMembers,channelsRequest,channelMembersRequest;return regeneratorRuntime.async(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.CHANNELS_REQUEST},{type:_constants.ChannelTypes.CHANNEL_MEMBERS_REQUEST}]),getState);channels=void 0;channelMembers=void 0;_context7.prev=3;channelsRequest=_client2.default.getChannels(teamId);channelMembersRequest=_client2.default.getMyChannelMembers(teamId);_context7.next=8;return regeneratorRuntime.awrap(channelsRequest);case 8:channels=_context7.sent;_context7.next=11;return regeneratorRuntime.awrap(channelMembersRequest);case 11:channelMembers=_context7.sent;_context7.next=19;break;case 14:_context7.prev=14;_context7.t0=_context7['catch'](3);(0,_helpers.forceLogoutIfNecessary)(_context7.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.CHANNELS_FAILURE,error:_context7.t0},{type:_constants.ChannelTypes.CHANNEL_MEMBERS_FAILURE,error:_context7.t0},(0,_errors.getLogErrorAction)(_context7.t0)]),getState);return _context7.abrupt('return');case 19:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_CHANNELS,data:channels},{type:_constants.ChannelTypes.CHANNELS_SUCCESS},{type:_constants.ChannelTypes.RECEIVED_MY_CHANNEL_MEMBERS,data:channelMembers},{type:_constants.ChannelTypes.CHANNEL_MEMBERS_SUCCESS}]),getState);case 20:case'end':return _context7.stop();}}},null,_this7,[[3,14]]);};}function getMyChannelMembers(teamId){var _this8=this;return function _callee8(dispatch,getState){var channelMembers,channelMembersRequest;return regeneratorRuntime.async(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:dispatch({type:_constants.ChannelTypes.CHANNEL_MEMBERS_REQUEST},getState);channelMembers=void 0;_context8.prev=2;channelMembersRequest=_client2.default.getMyChannelMembers(teamId);_context8.next=6;return regeneratorRuntime.awrap(channelMembersRequest);case 6:channelMembers=_context8.sent;_context8.next=14;break;case 9:_context8.prev=9;_context8.t0=_context8['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context8.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.CHANNEL_MEMBERS_FAILURE,error:_context8.t0},(0,_errors.getLogErrorAction)(_context8.t0)]),getState);return _context8.abrupt('return');case 14:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_MY_CHANNEL_MEMBERS,data:channelMembers},{type:_constants.ChannelTypes.CHANNEL_MEMBERS_SUCCESS}]),getState);case 15:case'end':return _context8.stop();}}},null,_this8,[[2,9]]);};}function leaveChannel(teamId,channelId){var _this9=this;return function _callee9(dispatch,getState){return regeneratorRuntime.async(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:dispatch({type:_constants.ChannelTypes.LEAVE_CHANNEL_REQUEST},getState);_context9.prev=1;_context9.next=4;return regeneratorRuntime.awrap(_client2.default.leaveChannel(teamId,channelId));case 4:_context9.next=11;break;case 6:_context9.prev=6;_context9.t0=_context9['catch'](1);(0,_helpers.forceLogoutIfNecessary)(_context9.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.LEAVE_CHANNEL_FAILURE,error:_context9.t0},(0,_errors.getLogErrorAction)(_context9.t0)]),getState);return _context9.abrupt('return');case 11:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.LEAVE_CHANNEL,data:channelId},{type:_constants.ChannelTypes.LEAVE_CHANNEL_SUCCESS}]),getState);case 12:case'end':return _context9.stop();}}},null,_this9,[[1,6]]);};}function joinChannel(userId,teamId,channelId,channelName){var _this10=this;return function _callee10(dispatch,getState){var channel,channelMember;return regeneratorRuntime.async(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:dispatch({type:_constants.ChannelTypes.JOIN_CHANNEL_REQUEST},getState);channel=void 0;_context10.prev=2;if(!channelId){_context10.next=9;break;}_context10.next=6;return regeneratorRuntime.awrap(_client2.default.joinChannel(teamId,channelId));case 6:channel=_context10.sent;_context10.next=13;break;case 9:if(!channelName){_context10.next=13;break;}_context10.next=12;return regeneratorRuntime.awrap(_client2.default.joinChannelByName(teamId,channelName));case 12:channel=_context10.sent;case 13:_context10.next=20;break;case 15:_context10.prev=15;_context10.t0=_context10['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context10.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.JOIN_CHANNEL_FAILURE,error:_context10.t0},(0,_errors.getLogErrorAction)(_context10.t0)]),getState);return _context10.abrupt('return');case 20:channelMember={channel_id:channel.id,user_id:userId,roles:''+_constants.Constants.CHANNEL_USER_ROLE,last_viewed_at:0,msg_count:0,mention_count:0,notify_props:{desktop:'default',mark_unread:'all'},last_update_at:new Date().getTime()};dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_CHANNEL,data:channel},{type:_constants.ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER,data:channelMember},{type:_constants.ChannelTypes.JOIN_CHANNEL_SUCCESS}]),getState);case 22:case'end':return _context10.stop();}}},null,_this10,[[2,15]]);};}function deleteChannel(teamId,channelId){var _this11=this;return function _callee11(dispatch,getState){var entities,_entities$channels,channels,currentChannelId,channel,defaultChannelId;return regeneratorRuntime.async(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:dispatch({type:_constants.ChannelTypes.DELETE_CHANNEL_REQUEST},getState);_context11.prev=1;_context11.next=4;return regeneratorRuntime.awrap(_client2.default.deleteChannel(teamId,channelId));case 4:_context11.next=11;break;case 6:_context11.prev=6;_context11.t0=_context11['catch'](1);(0,_helpers.forceLogoutIfNecessary)(_context11.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.DELETE_CHANNEL_FAILURE,error:_context11.t0},(0,_errors.getLogErrorAction)(_context11.t0)]),getState);return _context11.abrupt('return');case 11:entities=getState().entities;_entities$channels=entities.channels,channels=_entities$channels.channels,currentChannelId=_entities$channels.currentChannelId;if(channelId===currentChannelId){channel=Object.keys(channels).filter(function(key){return channels[key].name===_constants.Constants.DEFAULT_CHANNEL;});defaultChannelId='';if(channel.length){defaultChannelId=channel[0];}dispatch({type:_constants.ChannelTypes.SELECT_CHANNEL,data:defaultChannelId},getState);}dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_CHANNEL_DELETED,data:channelId},{type:_constants.ChannelTypes.DELETE_CHANNEL_SUCCESS}]),getState);case 15:case'end':return _context11.stop();}}},null,_this11,[[1,6]]);};}function viewChannel(teamId,channelId){var _this12=this;return function _callee12(dispatch,getState){var state,currentChannelId,prevChannelId;return regeneratorRuntime.async(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:state=getState();currentChannelId=state.entities.channels.currentChannelId;prevChannelId='';if(channelId!==currentChannelId){prevChannelId=currentChannelId;}dispatch({type:_constants.ChannelTypes.UPDATE_LAST_VIEWED_REQUEST},getState);_context12.prev=5;_context12.next=8;return regeneratorRuntime.awrap(_client2.default.viewChannel(teamId,channelId,prevChannelId));case 8:_context12.next=15;break;case 10:_context12.prev=10;_context12.t0=_context12['catch'](5);(0,_helpers.forceLogoutIfNecessary)(_context12.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.UPDATE_LAST_VIEWED_FAILURE,error:_context12.t0},(0,_errors.getLogErrorAction)(_context12.t0)]),getState);return _context12.abrupt('return');case 15:dispatch({type:_constants.ChannelTypes.UPDATE_LAST_VIEWED_SUCCESS},getState);case 16:case'end':return _context12.stop();}}},null,_this12,[[5,10]]);};}function getMoreChannels(teamId,offset){var _this13=this;var limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:_constants.Constants.CHANNELS_CHUNK_SIZE;return function _callee13(dispatch,getState){var channels;return regeneratorRuntime.async(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:dispatch({type:_constants.ChannelTypes.MORE_CHANNELS_REQUEST},getState);channels=void 0;_context13.prev=2;_context13.next=5;return regeneratorRuntime.awrap(_client2.default.getMoreChannels(teamId,offset,limit));case 5:channels=_context13.sent;_context13.next=13;break;case 8:_context13.prev=8;_context13.t0=_context13['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context13.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.MORE_CHANNELS_FAILURE,error:_context13.t0},(0,_errors.getLogErrorAction)(_context13.t0)]),getState);return _context13.abrupt('return',null);case 13:_context13.t1=dispatch;_context13.t2=_reduxBatchedActions.batchActions;_context13.t3=_constants.ChannelTypes.RECEIVED_MORE_CHANNELS;_context13.next=18;return regeneratorRuntime.awrap(channels);case 18:_context13.t4=_context13.sent;_context13.t5={type:_context13.t3,data:_context13.t4};_context13.t6={type:_constants.ChannelTypes.MORE_CHANNELS_SUCCESS};_context13.t7=[_context13.t5,_context13.t6];_context13.t8=(0,_context13.t2)(_context13.t7);_context13.t9=getState;(0,_context13.t1)(_context13.t8,_context13.t9);return _context13.abrupt('return',channels);case 26:case'end':return _context13.stop();}}},null,_this13,[[2,8]]);};}function searchMoreChannels(teamId,term){var _this14=this;return function _callee14(dispatch,getState){var channels;return regeneratorRuntime.async(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:dispatch({type:_constants.ChannelTypes.MORE_CHANNELS_REQUEST},getState);channels=void 0;_context14.prev=2;_context14.next=5;return regeneratorRuntime.awrap(_client2.default.searchMoreChannels(teamId,term));case 5:channels=_context14.sent;_context14.next=13;break;case 8:_context14.prev=8;_context14.t0=_context14['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context14.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.MORE_CHANNELS_FAILURE,error:_context14.t0},(0,_errors.getLogErrorAction)(_context14.t0)]),getState);return _context14.abrupt('return');case 13:_context14.t1=dispatch;_context14.t2=_reduxBatchedActions.batchActions;_context14.t3=_constants.ChannelTypes.RECEIVED_MORE_CHANNELS;_context14.next=18;return regeneratorRuntime.awrap(channels);case 18:_context14.t4=_context14.sent;_context14.t5={type:_context14.t3,data:_context14.t4};_context14.t6={type:_constants.ChannelTypes.MORE_CHANNELS_SUCCESS};_context14.t7=[_context14.t5,_context14.t6];_context14.t8=(0,_context14.t2)(_context14.t7);_context14.t9=getState;(0,_context14.t1)(_context14.t8,_context14.t9);case 25:case'end':return _context14.stop();}}},null,_this14,[[2,8]]);};}function getChannelStats(teamId,channelId){var _this15=this;return function _callee15(dispatch,getState){var stat;return regeneratorRuntime.async(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:dispatch({type:_constants.ChannelTypes.CHANNEL_STATS_REQUEST},getState);stat=void 0;_context15.prev=2;_context15.next=5;return regeneratorRuntime.awrap(_client2.default.getChannelStats(teamId,channelId));case 5:stat=_context15.sent;_context15.next=13;break;case 8:_context15.prev=8;_context15.t0=_context15['catch'](2);(0,_helpers.forceLogoutIfNecessary)(_context15.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.CHANNEL_STATS_FAILURE,error:_context15.t0},(0,_errors.getLogErrorAction)(_context15.t0)]),getState);return _context15.abrupt('return');case 13:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_CHANNEL_STATS,data:stat},{type:_constants.ChannelTypes.CHANNEL_STATS_SUCCESS}]),getState);case 14:case'end':return _context15.stop();}}},null,_this15,[[2,8]]);};}function addChannelMember(teamId,channelId,userId){var _this16=this;return function _callee16(dispatch,getState){return regeneratorRuntime.async(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:dispatch({type:_constants.ChannelTypes.ADD_CHANNEL_MEMBER_REQUEST},getState);_context16.prev=1;_context16.next=4;return regeneratorRuntime.awrap(_client2.default.addChannelMember(teamId,channelId,userId));case 4:_context16.next=11;break;case 6:_context16.prev=6;_context16.t0=_context16['catch'](1);(0,_helpers.forceLogoutIfNecessary)(_context16.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.ADD_CHANNEL_MEMBER_FAILURE,error:_context16.t0},(0,_errors.getLogErrorAction)(_context16.t0)]),getState);return _context16.abrupt('return');case 11:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.UsersTypes.RECEIVED_PROFILE_IN_CHANNEL,data:{user_id:userId},id:channelId},{type:_constants.ChannelTypes.ADD_CHANNEL_MEMBER_SUCCESS}]),getState);case 12:case'end':return _context16.stop();}}},null,_this16,[[1,6]]);};}function removeChannelMember(teamId,channelId,userId){var _this17=this;return function _callee17(dispatch,getState){return regeneratorRuntime.async(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:dispatch({type:_constants.ChannelTypes.REMOVE_CHANNEL_MEMBER_REQUEST},getState);_context17.prev=1;_context17.next=4;return regeneratorRuntime.awrap(_client2.default.removeChannelMember(teamId,channelId,userId));case 4:_context17.next=11;break;case 6:_context17.prev=6;_context17.t0=_context17['catch'](1);(0,_helpers.forceLogoutIfNecessary)(_context17.t0,dispatch);dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.REMOVE_CHANNEL_MEMBER_FAILURE,error:_context17.t0},(0,_errors.getLogErrorAction)(_context17.t0)]),getState);return _context17.abrupt('return');case 11:dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.UsersTypes.RECEIVED_PROFILE_NOT_IN_CHANNEL,data:{user_id:userId},id:channelId},{type:_constants.ChannelTypes.REMOVE_CHANNEL_MEMBER_SUCCESS}]),getState);case 12:case'end':return _context17.stop();}}},null,_this17,[[1,6]]);};}function updateChannelHeader(channelId,header){var _this18=this;return function _callee18(dispatch,getState){return regeneratorRuntime.async(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:dispatch({type:_constants.ChannelTypes.UPDATE_CHANNEL_HEADER,data:{channelId:channelId,header:header}},getState);case 1:case'end':return _context18.stop();}}},null,_this18);};}function updateChannelPurpose(channelId,purpose){var _this19=this;return function _callee19(dispatch,getState){return regeneratorRuntime.async(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:dispatch({type:_constants.ChannelTypes.UPDATE_CHANNEL_PURPOSE,data:{channelId:channelId,purpose:purpose}},getState);case 1:case'end':return _context19.stop();}}},null,_this19);};}function markChannelAsRead(channelId,prevChannelId){var _this20=this;return function _callee20(dispatch,getState){var state,channels,totalMsgCount,actions,prevTotalMsgCount;return regeneratorRuntime.async(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:state=getState();channels=state.entities.channels.channels;totalMsgCount=0;if(channels[channelId]){totalMsgCount=channels[channelId].total_msg_count;}actions=[{type:_constants.ChannelTypes.RECEIVED_LAST_VIEWED,data:{channel_id:channelId,last_viewed_at:new Date().getTime(),total_msg_count:totalMsgCount}}];if(prevChannelId){prevTotalMsgCount=0;if(channels[prevChannelId]){prevTotalMsgCount=channels[prevChannelId].total_msg_count;}actions.push({type:_constants.ChannelTypes.RECEIVED_LAST_VIEWED,data:{channel_id:prevChannelId,last_viewed_at:new Date().getTime(),total_msg_count:prevTotalMsgCount}});}dispatch((0,_reduxBatchedActions.batchActions)([].concat(actions)),getState);case 7:case'end':return _context20.stop();}}},null,_this20);};}function markChannelAsUnread(channelId,mentionsArray){var _this21=this;return function _callee21(dispatch,getState){var state,_state$entities$chann,channels,myMembers,currentUserId,channel,member,mentions;return regeneratorRuntime.async(function _callee21$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:state=getState();_state$entities$chann=state.entities.channels,channels=_state$entities$chann.channels,myMembers=_state$entities$chann.myMembers;currentUserId=state.entities.users.currentUserId;if(channels[channelId]&&myMembers[channelId]){channel=_extends({},channels[channelId]);member=_extends({},myMembers[channelId]);channel.total_msg_count++;if(member.notify_props&&member.notify_props.mark_unread===_constants.Constants.MENTION){member.msg_count++;}mentions=[];if(mentionsArray){mentions=JSON.parse(mentionsArray);if(mentions.indexOf(currentUserId)!==-1){member.mention_count++;}}dispatch((0,_reduxBatchedActions.batchActions)([{type:_constants.ChannelTypes.RECEIVED_MY_CHANNEL_MEMBER,data:member},{type:_constants.ChannelTypes.RECEIVED_CHANNEL,data:channel}]),getState);}case 4:case'end':return _context21.stop();}}},null,_this21);};}function autocompleteChannels(teamId,term){var _this22=this;
return function _callee22(dispatch,getState){var data;return regeneratorRuntime.async(function _callee22$(_context22){while(1){switch(_context22.prev=_context22.next){case 0:
dispatch({type:_constants.ChannelTypes.AUTOCOMPLETE_CHANNELS_REQUEST},getState);

data=void 0;_context22.prev=2;_context22.next=5;return regeneratorRuntime.awrap(

_client2.default.autocompleteChannels(teamId,term));case 5:data=_context22.sent;_context22.next=13;break;case 8:_context22.prev=8;_context22.t0=_context22['catch'](2);

(0,_helpers.forceLogoutIfNecessary)(_context22.t0,dispatch);
dispatch((0,_reduxBatchedActions.batchActions)([
{type:_constants.ChannelTypes.AUTOCOMPLETE_CHANNELS_FAILURE,error:_context22.t0},
(0,_errors.getLogErrorAction)(_context22.t0)]),
getState);return _context22.abrupt('return');case 13:



dispatch((0,_reduxBatchedActions.batchActions)([
{
type:_constants.ChannelTypes.RECEIVED_AUTOCOMPLETE_CHANNELS,
data:data,
teamId:teamId},

{
type:_constants.ChannelTypes.AUTOCOMPLETE_CHANNELS_SUCCESS}]),

getState);case 14:case'end':return _context22.stop();}}},null,_this22,[[2,8]]);};

}exports.default=

{
selectChannel:selectChannel,
createChannel:createChannel,
createDirectChannel:createDirectChannel,
updateChannel:updateChannel,
updateChannelNotifyProps:updateChannelNotifyProps,
getChannel:getChannel,
fetchMyChannelsAndMembers:fetchMyChannelsAndMembers,
getMyChannelMembers:getMyChannelMembers,
leaveChannel:leaveChannel,
joinChannel:joinChannel,
deleteChannel:deleteChannel,
viewChannel:viewChannel,
getMoreChannels:getMoreChannels,
searchMoreChannels:searchMoreChannels,
getChannelStats:getChannelStats,
addChannelMember:addChannelMember,
removeChannelMember:removeChannelMember,
updateChannelHeader:updateChannelHeader,
updateChannelPurpose:updateChannelPurpose,
markChannelAsRead:markChannelAsRead,
markChannelAsUnread:markChannelAsUnread,
autocompleteChannels:autocompleteChannels};